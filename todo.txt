GitHub Organisation:
  -Hauptprojekt: Das rohe Interface ohne irgendwelche Module.
  -Module: Jedes Modul hat sein eigenes Repo, damit Leute auch was commiten und somit das Projekt unterstützen
    -TODO Tasks Modul: Erstellen von Tasks-Listen, entweder Privat, Öffentlich oder Teilbar mit anderen Nutzern.
    Intranet.todo {
      ListID (Integer),
      title (string),
      tasks ("Müll rausbringen", "Das machen", "Dies machen")(Eine Liste von Strings, beim Abhaken wird der Eintrag einfach aus dem Array gelöscht),
      tasks_done (Gleiche Liste nur als Abgehakt!),
      public (boolean),
      shared (Liste von Benutzern),
      creator (Der Ersteller)
    }
    
    PHP Funktionen: Erstellen, Entfernen, Bearbeiten.
    
    -TODO Kalender Modul: Ein Kalendern in dem jeder Benutzer seine Termine eintragen kann. Die Dauer ist bestimmtbar, auch die sichbarkeit.
    Wie das Datum richtig im Kalender angezeigt wird, behandeln wir später.
    Intranet.Kalender {
      id (Integer)(Ist die Termin-ID),
      name (string)(Der Title des Termins),
      desc (string)(Beschreibung),
      time (string)(0 = ganztätig, 13:00-14:00 = von 13-14 Uhr, 9:30 = um 9:30),
      user (string)(Der Benutzer, welcher den Termin erstellt hat),
      public (boolean)(Ob der Termin öffentlich, oder privat ist),
      shared (string)(Liste von Benutzern("test,Bennet,Mama")),
    }
    -TODO Temperatur Modul: Das erste Modul mit Hardware.
    Intranet.temp {
      id (Integer)(Die ID der Station des Arduino),
      name (string)(Name der Station, z.B. Büro),
      temps (String)(Die Temperaturen der letzten 24 Stunden(13,13,13,14,15,14,14,13...))
    }
    Der RaspberryPi besitzt ein PHP Script, welches über GET läuft. Die Temperatursensoren bestehen aus folgenden Teilen: Einem Arduino Nano, einem Sensor und einem
    WIFI Modul, alles in einer 3D-Gedruckten Verpackung. Der Arduino sendet jede 30min. per WIFI eine HTTP Request an den Raspberrypi um die Temperaturen in die
    Datenbank zu setzten. Die Zeit wird aber nicht einfach gestoppt zur nächsten Messung, sondern alle orentieren sich nach der UNIX-Zeit, damit die Daten alle
    immer zu einer festen Uhrzeit ankommen, nicht immer mal zwischendurch.
    Auf dem Interface kann man dann einen Graphen machen, welcher die Temperaturen anzeigt, dazu muss nur der Datenbankdatensatz geteilt und an ein JavaScript-script
    übergeben werden.
    -TODO Luftfeuchtigkeits Sensor: Luftfeuchtigkeits-messer
    Letzendlich genau das gleiche wie der Temperatur Sensor, nur eben mit Luftfeuchtigkeit. Diese beiden Hardware-Messarten lassen sich vielleicht auch gut
    in eins integrieren.
    -TODO Wetter Modul: Das Wetter immer für den Standort bereit haben.
    fügt eine Seite hinzu, welche die Wetterdaten von externen Websiten einholt und dastellt. 


Planung Website: Vorstellung: Was macht IntraHome so besonders?
Jeder hätte gerne ein SmartHome, Lichter per App an und aus, Heizung steuern, all diese Sachen. Aber fertige Lösungen sind 
meist teuer und man hat danach viele verschiedene Apps für alles. Aber wie wäre es, wenn man ALLES in einer App hat & Zusätzlich
alle anderen wichtigen Sachen in einem Interface? Aufrufbar über den Computer, Laptop, Tablet und Handy? Desswegen haben wir
dieses Projekt in's Leben gerufen. Seid Februar 2017 arbeiten wir an einem OpenSource Intranet, welches in der Lage ist ein
SmartHome zu bedienen. Bestehen tut das ganze aus einer OpenSource Software, welche sich um den RaspberryPi dreht. 
Dort befindet sich ein Webserver und eine Datenbank, was zusammen alles wichtige verwaltet. Man kann sich mit seinem User einloggen
und dort Dinge machen. Wichtig ist auch, dass das ganze System nicht statisch ist, sondern Modular. Man kann sich also aussuchen
was machen wirklich braucht und diese Module dann ganz einfach installieren. Module können auch selber geschrieben werden. 
Zudem bieten wir auch Hardware Module, welche dann von Bastler selbst zusammengebaut werden können. Software liefern wir mit.
Ist man aber kein Bastler ist das auch nicht so schlimm. Man kann einfach fertige Sets kaufen. Nehmen wir uns das Bsp. Temperatur-
Messung in einem Raum z.B. dem Büro. Das System dahinter ist kein Geheimniss und man kann es seinen Bedürfnissen anpassen. 
Für Bastler kommen alle Teile dazu in einem Packet. Dieses enthält für das Temperatur-Modul einen Arduino Nano, ein WIFI Modul,
den Source-Code für den Arduino, eine 3D-gedruckte Hülle für die Teile sowie alle weiteren Komponenten, welche für den Bau nötig sind.
Für nichtbastler, kommt das Modul dann schon fertig zusammengebaut und konfiguriert. Einfach montieren und fertig.
Natürlich kostet das dann etwas mehr, allerdings erhält man dann auch eine Garantie. Also kann im Schadensfall das Produkt 
ersetzt werden.

So kann jeder das System benutzen. Kalendern und TODO Listen auf dem Pc und auf dem Handy. Ein OpenSource SmartHome, welches
nicht viel Geld kostet und äußerst effizient ist. 

Module werden vom Team geschrieben. Aber auch Außenstehende können Module einreichen, so entsteht eine wachsende Zahl an Modulen!
Die Grenzen sind dank des OpenSource Systems Grenzenlos.


Interface Design: 
Das Design für's Interface soll flat und modern sein. Möglichst minimalistisch.  